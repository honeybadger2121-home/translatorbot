<!DOCTYPE html>
<html>
<head>
  <title>Translator Bot Analytics</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body { font-family: sans-serif; margin: 2rem; background: #f5f5f5; }
    .container { max-width: 1200px; margin: 0 auto; background: white; padding: 2rem; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
    .metrics { display: flex; gap: 2rem; flex-wrap: wrap; }
    .metric-card { background: #fff; border: 1px solid #ddd; padding: 1rem; border-radius: 6px; min-width: 150px; }
    canvas { max-width: 600px; margin-top: 2rem; }
    .footer { margin-top: 3rem; padding-top: 2rem; border-top: 1px solid #eee; font-size: 0.9em; color: #666; }
    .footer a { color: #007bff; text-decoration: none; }
    .footer a:hover { text-decoration: underline; }
  </style>
</head>
<body>
  <div class="container">
    <h1>üåê Translator Bot Dashboard</h1>
    <p>Real-time analytics and monitoring for Discord translation services</p>

    <div class="metrics">
      <div class="metric-card"><strong>Throughput:</strong> <span id="throughput"><%= metrics.throughput %></span></div>
      <div class="metric-card"><strong>Translations:</strong> <span id="transCount"><%= metrics.transCount %></span></div>
      <div class="metric-card"><strong>Cache Hits:</strong> <span id="cacheHits"><%= metrics.cacheHits %></span></div>
      <div class="metric-card"><strong>Cache Misses:</strong> <span id="cacheMisses"><%= metrics.cacheMisses %></span></div>
    </div>

    <h2>üìä Detected Languages</h2>
    <ul id="langCounts">
      <% for(const [lang,count] of Object.entries(metrics.langCounts)) { %>
        <li><%= lang %>: <%= count %></li>
      <% } %>
    </ul>

    <h2>üìà Events Over Last Hour</h2>
    <canvas id="detectChart"></canvas>
    <canvas id="transChart"></canvas>

    <div class="footer">
      <p><strong>Translator Bot</strong> - Discord Translation Service</p>
      <p>
        <a href="https://github.com/honeybadger2121-home/translatorbot" target="_blank">GitHub Repository</a> |
        <a href="https://github.com/honeybadger2121-home/translatorbot/blob/main/TERMS.md" target="_blank">Terms of Service</a> |
        <a href="https://github.com/honeybadger2121-home/translatorbot/blob/main/PRIVACY.md" target="_blank">Privacy Policy</a> |
        <a href="https://github.com/honeybadger2121-home/translatorbot/issues" target="_blank">Support</a>
      </p>
      <p><small>¬© 2025 - Licensed under MIT License | Contact: BRS8519@gmail.com</small></p>
    </div>
  </div>

  <script>
    // init charts
    function makeChart(ctx, label, color) {
      return new Chart(ctx, {
        type: 'line',
        data: {
          labels: [], datasets: [{
            label, data: [], borderColor: color, fill: false
          }]
        }
      });
    }

    const detectChart = makeChart(
      document.getElementById('detectChart').getContext('2d'),
      'Detections/min','blue'
    );
    const transChart = makeChart(
      document.getElementById('transChart').getContext('2d'),
      'Translations/min','green'
    );

    // Helper to update charts
    function updateChart(chart, series) {
      const labels = Object.keys(series).sort();
      chart.data.labels = labels;
      chart.data.datasets[0].data = labels.map(k => series[k]);
      chart.update();
    }

    // Socket.IO live updates
    const socket = io();
    socket.on('metricsUpdate', data => {
      // numeric metrics
      document.getElementById('throughput').textContent  = data.throughput;
      document.getElementById('transCount').textContent  = data.transCount;
      document.getElementById('cacheHits').textContent   = data.cacheHits;
      document.getElementById('cacheMisses').textContent = data.cacheMisses;

      // languages list
      const ul = document.getElementById('langCounts');
      ul.innerHTML = '';
      Object.entries(data.langCounts).forEach(([lang, cnt]) => {
        const li = document.createElement('li');
        li.textContent = `${lang}: ${cnt}`;
        ul.appendChild(li);
      });

      // charts
      updateChart(detectChart, data.detectSeries);
      updateChart(transChart, data.transSeries);
    });
  </script>
</body>
</html>
